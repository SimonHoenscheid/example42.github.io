I"≠#<p>Puppet 6 has been released the 18th of September, Eric Sorenson announced the <a href="https://puppet.com/docs/puppet/6.0/release_notes.html">new release</a> in <a href="https://puppet.com/blog/introducing-puppet-6">this blog post</a>.</p>

<p>This is a new major release because it contains some enhancements which are not backwards compatible, but for most of the cases they won‚Äôt require you to do any major review of your Puppet code base: if it works with Puppet 4 it‚Äôs likely to work also on Puppet 6.</p>

<p>Let‚Äôs see what are the most interesting new features.</p>

<ul id="markdown-toc">
  <li><a href="#several-types-moved-to-dedicated-modules" id="markdown-toc-several-types-moved-to-dedicated-modules">Several types moved to dedicated modules</a></li>
  <li><a href="#new-ca-management-on-the-puppetserver" id="markdown-toc-new-ca-management-on-the-puppetserver">New CA management on the puppetserver</a></li>
  <li><a href="#puppet-ssl-command" id="markdown-toc-puppet-ssl-command">Puppet ssl command</a></li>
  <li><a href="#the-resource-api" id="markdown-toc-the-resource-api">The Resource API</a></li>
  <li><a href="#the-deferred-data-type" id="markdown-toc-the-deferred-data-type">The ‚ÄúDeferred‚Äù data type</a></li>
  <li><a href="#functions-imported-from-stdlib" id="markdown-toc-functions-imported-from-stdlib">Functions imported from stdlib</a></li>
  <li><a href="#command-puppet-module-build-removed" id="markdown-toc-command-puppet-module-build-removed">Command puppet module build removed</a></li>
  <li><a href="#conclusions" id="markdown-toc-conclusions">Conclusions</a></li>
</ul>

<h2 id="several-types-moved-to-dedicated-modules">Several types moved to dedicated modules</h2>

<p>This is a long awaited cleanup: all the Nagios types, and some other <a href="https://puppet.com/docs/puppet/6.0/type.html#deprecated-types">OS specific ones</a> are no more part of the core product or have been moved to modules.</p>

<p>Most of them are still shipped in the puppet-agent package, others are in maintained modules not included in the puppet agent and some have been moved to modules and been deprecated.</p>

<p>More precisely, the following types are included in supported modules on the forge and repackaged in puppet-agent, so nothing changes for end users:
<code class="highlighter-rouge">augeas cron host mount scheduled_task selboolean selmodule ssh_authorized_key sshkey yumrepo zfs zone zpool</code>.</p>

<p>These other types have been moved to module which are still supported by are not included in Puppet agent package, so if you use them you should add the relevant modules from the Forge: <code class="highlighter-rouge">k5login mailalias maillist</code>.</p>

<p>These types have been deprecated, they are moved to modules which are not going to be actively maintained and are not shipped with puppet-agent package: <code class="highlighter-rouge">computer interface macauthorization mcx router vlan</code> plus all the <code class="highlighter-rouge">nagios_*</code> types (all moved to <a href="https://forge.puppet.com/puppetlabs/nagios_core">puppetlabs-nagios_core</a> module).</p>

<p>In general all the moved types are now placed in a puppetlabs module with <code class="highlighter-rouge">_core</code> suffix. Look here for a <a href="https://forge.puppet.com/modules?utf-8=%E2%9C%93&amp;page_size=25&amp;sort=rank&amp;q=core">rough list</a>.</p>

<p>The core modules shipped with Puppet-agent are placed under <code class="highlighter-rouge">/opt/puppetlabs/puppet/modules</code> on *nix and <code class="highlighter-rouge">$codedir/modules</code> on Windows, these paths are added to the default <code class="highlighter-rouge">basemodulepath</code> setting.</p>

<h2 id="new-ca-management-on-the-puppetserver">New CA management on the puppetserver</h2>

<p>Puppet CA support has been rewritten in Clojure and included in the puppetserver package, the old CA Ruby code has been removed. The new <code class="highlighter-rouge">puppetserver ca</code> command has been introduced to replace the previous <code class="highlighter-rouge">puppet cert</code> and <code class="highlighter-rouge">puppet ca</code> commands.</p>

<p>The <code class="highlighter-rouge">puppetserver ca</code> actions to manage certs are similar to the old <code class="highlighter-rouge">puppet cert</code> ones. Available actions are:</p>

<ul>
  <li><code class="highlighter-rouge">clean</code>: clean files from the CA for certificates</li>
  <li><code class="highlighter-rouge">generate</code>: create a new certificate signed by the CA</li>
  <li><code class="highlighter-rouge">setup</code>: generate a root and intermediate signing CA for Puppet Server</li>
  <li><code class="highlighter-rouge">import</code>: import the CA‚Äôs key, certs, and CRLs</li>
  <li><code class="highlighter-rouge">list</code>: list all certificate requests</li>
  <li><code class="highlighter-rouge">revoke</code>: revoke a given certificate</li>
  <li><code class="highlighter-rouge">sign</code>: sign a given certificate</li>
</ul>

<h2 id="puppet-ssl-command">Puppet ssl command</h2>

<p>The <code class="highlighter-rouge">puppet ssl</code> command has been introduced. It replaces <code class="highlighter-rouge">puppet certificate_request</code> (use <code class="highlighter-rouge">puppet ssl submit request</code>) and add subcommands like <code class="highlighter-rouge">puppet ssl verify</code> (verifies that local Puppet cert and key are valid) and <code class="highlighter-rouge">puppet ssl download_cert</code> (downloads a certificate for the local node).</p>

<h2 id="the-resource-api">The Resource API</h2>

<p>A <a href="https://puppet.com/docs/puppet/6.0/create_types_and_providers_resource_api.html">Resource API</a> has been added, providing a new, recommended method to create custom types and providers. The Resource API is built on top of Puppet core and is easier, faster, and safer than the old types and providers method.</p>

<p>Writing new Puppet providers based on the Resource API is even simpler by using the <code class="highlighter-rouge">pdk new provider</code> commands with the puppet Development Kit.</p>

<p>Check the <a href="https://puppet.com/docs/puppet/6.0/about_the_resource_api.html">reference</a> for more details.</p>

<h2 id="the-deferred-data-type">The ‚ÄúDeferred‚Äù data type</h2>

<p>This is a quite interesting and long awaited feature. Up to now the sanest method to do something on the client based on some client‚Äôs condition was to create a custom fact and use it as needed in the Puppet code.</p>

<p>The <code class="highlighter-rouge">Deferred</code> data type allows to call <strong>Ruby</strong> functions directly from the client before the catalog is applied (they are usually evaluated on the server). This is possible only with Ruby functions as they are already shipped to the client with pluginsync.</p>

<p>So it‚Äôs now possible to write some special function in our modules (under <code class="highlighter-rouge">lib/puppet</code>) that we want to run on the client.</p>

<p>One of the expected use cases is to <a href="https://tickets.puppetlabs.com/browse/PUP-8711">support secret lookups</a> at catalog application time via tools like Consul and Vault.</p>

<h2 id="functions-imported-from-stdlib">Functions imported from stdlib</h2>

<p>Some <a href="https://puppet.com/docs/puppet/6.0/function.html">functions</a> from the Puppetlabs-stdlib module have been moved to core:</p>

<ul>
  <li>
    <p>the getvar() function has been moved from stdlib, a new get() one has been introduced.</p>
  </li>
  <li>
    <p>the sort() function has been moved from stdlib to core and now accepts a lambda for custom comparisons</p>
  </li>
  <li>
    <p>the mathematical functions abs(), ceil(), floor(), round(), min(), and max() are compatible with homonymous stdlib ones with the added feature to use a lambda with a custom compare.</p>
  </li>
  <li>
    <p>upcase(), downcase(), capitalize(), camelcase(), lstrip(), rstrip(), strip(), chop(), chomp(), and size() and been moved to core and updated to the modern function API.</p>
  </li>
  <li>
    <p>New compare() function.</p>
  </li>
</ul>

<h2 id="command-puppet-module-build-removed">Command puppet module build removed</h2>

<p>The <code class="highlighter-rouge">puppet module build</code> command has been removed. To build and package modules <a href="https://puppet.com/docs/pdk/">PDK</a> should be used.</p>

<h2 id="conclusions">Conclusions</h2>

<p>This is a list of the most important changes with Puppet 6, in our opinion.</p>

<p>As you have seen they are mostly related to consolidation, cleanup and enrichment of the language and the platform.</p>

<p>Upgrade from Puppet 5 is expected to be safe and painless for most of the cases. If you are using any of the types which have been moved to separated modules which are not shipped with puppet-agent, you will have to add them by yourself to your module path.</p>

<p>Thanks to David Schmitt from Puppet for the remarks about some incorrect statements in the first revision of this post.</p>

<p>Alessandro Franceschi</p>
:ET