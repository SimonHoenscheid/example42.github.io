I"v<p>Note: This is an updated version of the <a href="https://www.example42.com/2017/01/23/existing-code-on-puppet4/">Tip of the Week 4 - Existing code and Puppet 4</a> dealing with octocatalog-catalog diff only.</p>

<h2 id="general">General</h2>

<p>Refactoring Puppet code is a task which we usually have to do, especially when being at a customer with Puppet code with a long history.</p>

<p>There are several reasons for refactoring:</p>

<ul>
  <li>Adopt to new best practices</li>
  <li>Migrate from Hiera config v3 to Hiera config v5</li>
  <li>Restructuring code to allow better code management</li>
</ul>

<p>But how can you verify that the refactoring was done properly, so no changes on systems occur?</p>

<p>This is where catalog diff tools come into place.
Originally these tools have been created to allow smooth upgrade from Puppet 3 to Puppet 4 (like the <a href="https://github.com/puppetlabs/puppetlabs-catalog_diff">puppetlabs-catalog_diff</a> or <a href="https://github.com/github/octocatalog-diff">octocatalog-diff</a>).</p>

<h2 id="installation">Installation</h2>

<p>Both tools use a different approach. The puppetlabs-catalog_diff is installed as a puppet module, bringing a new puppet interface (command line option).</p>

<p>Installation can be done using the <code class="highlighter-rouge">puppet module install</code>command:</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>puppet module install puppetlabs/puppetlabs-catalog_diff
</code></pre></div></div>

<p>After installation there is now a puppet cli command available:</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>puppet catalog diff
</code></pre></div></div>

<p>The octocatalog-diff is delivered as a ruby gem. It needs ruby 2.0 or newer and can be installed using the <code class="highlighter-rouge">puppet gem</code> or - in case you have a sufficient ruby version - the <code class="highlighter-rouge">gem</code> command:</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>/opt/puppetlabs/puppet/bin/gem install octocatalog-diff
</code></pre></div></div>

<p>The tool needs a local Puppet agent installed and can be used on Linux and Mac OS. Windows is not supported.</p>

<h2 id="configuration">Configuration</h2>

<p>The octocatalog diff tool needs a configuration file  (<code class="highlighter-rouge">.octocatalog-diff.cfg.rb</code>) unless you want to specify all parameters as command line options.</p>

<p>The configuration file can reside in different locations. Lookup for the file is done in the following order:</p>

<ol>
  <li>in local directory</li>
  <li>in home directory</li>
  <li>/usr/local/etc/octocatalog-diff.cfg.rb</li>
  <li>/opt/puppetlabs/octocatalog-diff/octocatalog-diff.cfg.rb</li>
  <li>/etc/octocatalog-diff.cfg.rb</li>
</ol>

<p>The configuration covers 4 different parts:</p>

<ol>
  <li>Hiera</li>
  <li>Node Classifier (ENC)</li>
  <li>PuppetDB and</li>
  <li>Puppet</li>
</ol>

<h4 id="hiera">Hiera</h4>

<p>If you are already using Puppet 4.9 or later and when you have a hiera.yaml (config v5 format) in your environment root, Puppet will recognize the file by itself, so will octocatalog-diff do.</p>

<p>In this case you are good to skip the hiera settings and you are asked to NOT configure hiera settings in octocatalog-diff.</p>

<h4 id="enc">ENC</h4>

<p>If you are using an external node classifier, you must tell octocatalog-diff about it. Puppet Enterprise uses the classifier API as ENC, which can be configured using a token or a whitelist.</p>

<p>If you are using token authentication against the Puppet Enterprise RBAC service, one needs to configure the following settings:</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>octocatalog-diff \
  --pe-enc-url https://your.pe.console.server:4433/classifier-api \
  --pe-enc-token-file /path/to/token/file.txt \
  --pe-enc-ssl-ca /path/to/ca.crt \
  [other options]
</code></pre></div></div>

<p>If you are using a whitelisted SSL keypair the following options must be used:</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>octocatalog-diff \
  --pe-enc-url https://your.pe.console.server:4433/classifier-api \
  --pe-enc-ssl-ca /path/to/ca.crt \
  --pe-enc-ssl-client-cert /path/to/client.crt \
  --pe-enc-ssl-client-key /path/to/client.key \
  [other options]
</code></pre></div></div>

<p>If you are using another ENC, you must pass the ENC file option:</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  octocalaog-diff \
    -enc bin/enc.sh \
    [other options]
</code></pre></div></div>

<h4 id="puppetdb">PuppetDB</h4>

<p>PuppetDB can be used to store latest node facts, exported resources and node catalogs and their reports.</p>

<p>In this specific case we are interested to receive the latest catalog from PuppetDB.</p>

<p>Octocatalog-diff only supports PuppetDB API v4 which means that you must run PuppetDB 2.3 or newer.</p>

<p>Usually Puppet Master is able to communicate with PuppetDB using a certificate whitelist. We can re-use this setting as this is the most secure way how to configure access to PuppetDB.</p>

<p>Octocatalog-diff must be configured to use proper certificates by using the following settings in configuration file:</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>settings[:puppetdb_url] 'https://puppetdb.server:8081/
settings[:puppetdb_ssl_ca] 'path to Puppet SSL CA file'
settings[:puppetdb_ssl_client_cert] 'path to Puppet SSL certificate
settings[:puppetdb_ssl_client_key] 'path to Puppet SSL key file'
</code></pre></div></div>

<p>If you prefer to set CLI options you can use the following form:</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>octocatalog-diff \
  --puppetdb-url https://puppetdb.example.net:8081 \
  --puppetdb-ssl-ca FILENAME
  --puppetdb-ssl-client-cert FILENAME
  --puppetdb-ssl-client-key FILENAME
</code></pre></div></div>

<p>Access to PuppetDB must be grated by using the <a href="https://puppet.com/docs/puppetdb/5.1/configure.html#certificate-whitelist">PuppetDB SSL whitelist option</a>.</p>

<h4 id="puppet">Puppet</h4>

<p>Last but least, octocatalog-diff must know about the Puppet installation which it uses to compile a catalog. Note: the puppet-agent is sufficient. There is no need to install puppetserver on a system where you want to make use of octocatalog-diff.</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>settings[:puppet_binary] = '/opt/puppetlabs/puppet/bin/puppet'
</code></pre></div></div>

<p>Please note, that octocatalog-diff must have the puppetdb-termini package installed in case that you also want to get exported resources in a nodes catalog.</p>

<h2 id="usage">Usage</h2>

<p>Now you are able to verify your settings by running</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>octocatalog-diff --config-test
</code></pre></div></div>

<p>Read the output carefully and see whether all settings are correct for your installation.</p>

<p>In normal (module) mode, octocatalog-diff will assume that the base for the catalog will be the origin/master branch on a git repository.
For control repository you want to change this by setting the <code class="highlighter-rouge">-f origin/productoin</code> CLI parameter.</p>

<p>Facts can be read from PuppetDB - if configured - or from a specifc facts file which gets added using the <code class="highlighter-rouge">--fact-file</code> option.</p>

<p>The nodes to test are provided using the <code class="highlighter-rouge">-n &lt;nodename&gt;</code> option</p>

<p>Additional descriptions and usage can be found in the <a href="https://github.com/github/octocatalog-diff/tree/master/doc">octocatalog-diff documentation</a>.</p>

<p>Happy hacking and refactoring using catalog diff verification.</p>

<p>Martin Alfke</p>
:ET