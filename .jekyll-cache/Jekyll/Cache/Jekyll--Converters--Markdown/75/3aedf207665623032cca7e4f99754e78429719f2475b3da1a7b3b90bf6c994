I"Œ<p>On <a href="https://www.example42.com/2018/06/11/what-you-need-to-know-about-puppet-facts-part-3-external_facts/">April 11th 2018 we wrote about external facts</a>. Within the mentioned posting we explained the possibilities you have and that you can use executables (like shell scripts) which will allow you to add individual facts.</p>

<p>What we have not talked about is the facter fork bomb and long facter execution times which you can run into easily.</p>

<ul id="markdown-toc">
  <li><a href="#facter-fork-bomb" id="markdown-toc-facter-fork-bomb">Facter fork bomb</a>    <ul>
      <li><a href="#facter-fork-bomb-example" id="markdown-toc-facter-fork-bomb-example">Facter fork bomb example</a></li>
      <li><a href="#facter-fork-bomb-explanation" id="markdown-toc-facter-fork-bomb-explanation">Facter fork bomb explanation</a></li>
      <li><a href="#facter-fork-bomb-prevention" id="markdown-toc-facter-fork-bomb-prevention">Facter fork bomb prevention</a></li>
    </ul>
  </li>
  <li><a href="#facter-execution-times" id="markdown-toc-facter-execution-times">Facter execution times</a>    <ul>
      <li><a href="#facter-timeout-example" id="markdown-toc-facter-timeout-example">Facter timeout example</a></li>
      <li><a href="#facter-timeout-prevention" id="markdown-toc-facter-timeout-prevention">Facter timeout prevention</a></li>
    </ul>
  </li>
</ul>

<h2 id="facter-fork-bomb">Facter fork bomb</h2>

<p>What is the facter fork bomb? A fork bomb means that the same process executes itsef over and over again.</p>

<h3 id="facter-fork-bomb-example">Facter fork bomb example</h3>

<p>Consider the following external facter shell code:</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c">#!/bin/bash</span>
<span class="nv">$osfamily</span><span class="o">=</span><span class="si">$(</span>facter <span class="nt">-p</span> os.family<span class="si">)</span>
<span class="k">case</span> <span class="nv">$osfamily</span> <span class="k">in</span>
  <span class="s1">'RedHat'</span><span class="p">)</span>
  <span class="p">;;</span>
  <span class="s1">'SLES'</span><span class="p">)</span>
  <span class="p">;;</span>
  <span class="s1">'Debian'</span><span class="p">)</span>
  <span class="p">;;</span>
<span class="k">esac</span>
</code></pre></div></div>

<h3 id="facter-fork-bomb-explanation">Facter fork bomb explanation</h3>

<p>You want to return different values, depending on the os.family facts.
But what will happen:</p>

<p>Facter executes the shell script. The shell script itself executes facter, which will exectute the shell script, which will execute facter,â€¦..</p>

<p>Welcome to your first facter fork bomb. Within a couple of seconds your system will be unusable, running on high load and eating memory.</p>

<h3 id="facter-fork-bomb-prevention">Facter fork bomb prevention</h3>

<p>Never use the facter executable in an external, executable fact.
If you really must use a fact, then please consider writing a custom fact in Ruby.</p>

<p>Here you can easily use facter.value to access available facts without the experience of a fork bomb.</p>

<h2 id="facter-execution-times">Facter execution times</h2>

<p>Another issue which can occur is that facter takes a hugh amount of time to collect facts. Sometimes this can be related to an external or custom fact where you try to connect to a non-performance system collecting data.</p>

<h3 id="facter-timeout-example">Facter timeout example</h3>

<p>Consider your 200 nodes to query information e.g. from LDAP or a remote database.</p>

<p>See the following code example:</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c">#!/bin/bash</span>
<span class="nv">$role</span><span class="o">=</span><span class="si">$(</span>ldapsearch <span class="nt">-b</span> <span class="s1">'cn=role, cn=$(hostname) ou=Servers, dc=example42, cd=com'</span> <span class="nt">-h</span> ldapmaster.example42.com <span class="nt">-l</span> 3600
<span class="nb">echo</span> <span class="s2">"role=</span><span class="nv">$role</span><span class="s2">"</span>
</code></pre></div></div>

<p>What happens if your LDAP server is not available, slowly responding or available over a highly saturated network link only?</p>

<p>Facter will take long time to collect all information.
This can even lead to a timeout.</p>

<h3 id="facter-timeout-prevention">Facter timeout prevention</h3>

<p>Donâ€™t access remote systems from facter. Either the remote system can not deal well with the amount of requests or single nodes can not access the remote system.</p>

<p>Each external (executable) fact should use local resources only.</p>

<p>Happy hacking,
Martin Alfke</p>
:ET